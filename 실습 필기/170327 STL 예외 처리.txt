

===================
Mon Mar 27 20:35:19 2017
===================


// 2017 1 STL 17.3.27 월

#include <iostream>
#include "save.h"
using namespace std;

// 4장. 일반개념

// 4.3 예외처리 - 그림 4.1 표준예외의 계층구조
// 예외 - 모든 예외는 exception을 상속
// STL은 속도에 최우선, 예외는 필요하면 프로그래머가 따로 처리해야한다.
// (예외를 처리하지 않는다.)
//
// bad_alloc - 할당해줄 메모리가 없다.
// bad_cast - dynamic_cast가 실패했다.
//
// 호출가능객체


int main()
{
	int i = 0;
	/*while (true) {
		try {
			// new int[100];
		}
		catch (exception& e) { // ellipses
			cout << e.what() << endl;
			break;
		}
		cout << ++i << "할당 성공!" << endl;
	}*/

	save();
}