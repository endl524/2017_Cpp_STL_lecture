

===================
Mon Mar 13 20:05:14 2017
===================


// 2017 1 STL 17.3.6 월 (2주차 1강)
// 시작퀴즈
// 한 학기 강의를 저장할 수 있는 save() 함수 작성

#include <iostream>
#include <random>
#include <algorithm>
#include <fstream>
#include "save.h"
using namespace std;



// 정렬된 정수 10000개를 임의로 생성하여 오름차순 정렬.
// 정렬 결과를 파일로 저장해 주세요.

int main()
{
	// 파일에서 읽어오기

	ifstream in("정수10000개.txt");
	int data;
	in.read((char*)&data, 4);


	cout << endl;

	save();
}

===================
Mon Mar 13 20:28:38 2017
===================


// 2017 1 STL 17.3.6 월 (2주차 1강)
// 시작퀴즈
// 한 학기 강의를 저장할 수 있는 save() 함수 작성

#include <iostream>
#include <random>
#include <algorithm>
#include <fstream>
#include "save.h"
using namespace std;

class Dog {
	int age;
public:
	void setAge(int n) { age = n; } // age를 넘겨주는 public 함수를 생성.
	int getAge() const { return age; } // age를 읽어주는 함수 생성.
};

bool xxx(const Dog&, const Dog&);

// 개 100 마리를 생성하여 나이 순으로 정렬하여 출력하라.
// sort()로 정렬하고, 나이는 random엔진을 사용하여 (0,20) 


int main()
{
	Dog dogs[100];
	uniform_int_distribution<> ui(0, 20);
	default_random_engine dre;

	for(Dog& d: dogs)
		d.setAge(ui(dre)); // age를 넘겨주는 함수를 사용해주자.

	sort(begin(dogs), end(dogs), xxx); // 정렬

	for (const Dog d : dogs) // a의 크기만큼 d (data) 에.. 
		cout << d.getAge() << "\t"; // age를 읽어주는 함수를 사용해주자.

	cout << endl;

	save();
}

bool xxx(const Dog& a, const Dog& b)
{
	return a.getAge() < b.getAge(); // 오름차순 (age를 읽어주는 함수를 사용해주자.)
}