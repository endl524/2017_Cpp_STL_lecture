

===================
Mon Apr  3 20:59:24 2017
===================


// 2017 1 STL 17.4.3 월

#include <iostream>
#include <memory>
#include "save.h"
using namespace std;


// 5장. 유틸리티 (C++ 표준문서의 한 chapter)
// pair/tuple
// smart pointer
// data_traits
// chrono - 시간을 재는 코드


// smart pointer
// unique_ptr - 자원을 독점하는 포인터
// shared_ptr - 자원을 공유하는 포인터

class Model {
public:
	Model() { cout << "ctor" << endl; }
	~Model() { cout << "dtor" << endl; }
};

class u_ptr {
	Model* ptr;

public:
	explicit u_ptr(Model* p) : ptr(p) {} // 포인터 세이브
	~u_ptr() { delete ptr; }
};

int main()
{
	unique_ptr<Model> p(new Model);

	// 예외가 발생 (예외 처리)
	try {
		throw 33;
	}
	catch (int n) {
		cout << n << endl;
	}

	save();
}